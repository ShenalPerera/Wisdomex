

CREATE TABLE SUBJECT_(
    Subject_Code  INT AUTO_INCREMENT,
    Subject_Name VARCHAR(50) NOT NULL,
    Subject_Type CHAR(3) NOT NULL,
    PRIMARY KEY (Subject_Code)
);

CREATE TABLE PARENT(
    Parent_ID INT AUTO_INCREMENT,
    Parent_Name VARCHAR(40) NOT NULL,
    Email VARCHAR(40),
    Phone_Number VARCHAR(12),
    PRIMARY KEY (Parent_ID),
    UNIQUE (Email , Phone_Number)
);

CREATE TABLE TEACHER(
    Teacher_ID  INT AUTO_INCREMENT,
    First_Name VARCHAR(20) NOT NULL,
    Mid_Name VARCHAR(20),
    Last_Name VARCHAR(20) NOT NULL,
    Email VARCHAR(40) NOT NULL,
    Gender VARCHAR(6) NOT NULL,
    Phone_Number VARCHAR(12) NOT NULL,
    Teacher_Type CHAR(3),
    Parent_ID INT,
    PRIMARY KEY (Teacher_ID),
    UNIQUE (Email , Phone_Number),
    FOREIGN KEY (Parent_ID) REFERENCES PARENT(Parent_ID) ON DELETE SET NULL ON UPDATE CASCADE
);





CREATE TABLE STUDENT(
    Student_ID  INT AUTO_INCREMENT,
    First_Name VARCHAR(20) NOT NULL,
    Mid_Name VARCHAR(20),
    Last_Name VARCHAR(20) NOT NULL,
    Email VARCHAR(40) NOT NULL,
    Gender VARCHAR(6) NOT NULL,
    Age INTEGER NOT NULL,
    Phone_Number VARCHAR(12),
    Student_Type CHAR(3) NOT NULL,
    Grade INTEGER,
    Year INTEGER,
    Parent_ID INT,
    PRIMARY KEY (Student_ID),
    UNIQUE (Email , Phone_Number),
    FOREIGN KEY (Parent_ID) REFERENCES PARENT(Parent_ID) ON DELETE SET NULL ON UPDATE CASCADE
);



CREATE TABLE NOTES(
    Lesson_Name  VARCHAR(50) NOT NULL,
    Subject_Code  INT,
    Content MEDIUMBLOB,
    FOREIGN KEY (Subject_Code) REFERENCES SUBJECT_(Subject_Code) ON DELETE CASCADE ON UPDATE CASCADE
);




CREATE TABLE PAPER(
	Paper_ID INT AUTO_INCREMENT,
    Paper_Name VARCHAR(50),
    Subject_Code  INT,
    PRIMARY KEY (Paper_ID),
    FOREIGN KEY (Subject_Code) REFERENCES SUBJECT_(Subject_Code) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE STRUCTURED(
    Question_ID  INT AUTO_INCREMENT,
    Paper_ID INT,
    Question TEXT,
    PRIMARY KEY (Question_ID),
    FOREIGN KEY (Paper_ID) REFERENCES PAPER(Paper_ID) ON DELETE CASCADE ON UPDATE CASCADE

);



CREATE TABLE MCQ(
    Question_ID  INT AUTO_INCREMENT,
    Paper_ID INT,
    Question TEXT,
    Option1 TEXT,
    Option2 TEXT,
    Option3 TEXT,
    Option4 TEXT,
    Correct_Answer INTEGER,
    PRIMARY KEY (Question_ID),
    FOREIGN KEY (Paper_ID) REFERENCES PAPER(Paper_ID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE ANSWERING_MCQ(
    Student_ID  INT,
    Question_ID  INT,
    Student_Answer INTEGER,
    FOREIGN KEY (Student_ID) REFERENCES STUDENT(Student_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Question_ID) REFERENCES MCQ(Question_ID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE ANSWERING_STRUCTURED(
    Student_ID  INT,
    Question_ID  INT,
    Student_Answer TEXT,
    FOREIGN KEY (Student_ID) REFERENCES STUDENT(Student_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Question_ID) REFERENCES STRUCTURED(Question_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ENROL(
    Student_ID  INT,
    Subject_Code  INT,
    Enrol_Date DATE,
    FOREIGN KEY (Student_ID) REFERENCES STUDENT(Student_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Subject_Code) REFERENCES SUBJECT_(Subject_Code) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE TEACH(
    Teacher_ID  INT,
    Subject_Code  INT,
    FOREIGN KEY (Teacher_ID) REFERENCES TEACHER(Teacher_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Subject_Code) REFERENCES SUBJECT_(Subject_Code) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE STUDENT_REG(
	Passcode VARCHAR(15),
    ID INT,
    FOREIGN KEY(ID) REFERENCES STUDENT(Student_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE TEACHER_REG(
	Passcode VARCHAR(15) NOT NULL,
    ID INT,
    FOREIGN KEY(ID) REFERENCES TEACHER(Teacher_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PARENT_REG(
	Passcode VARCHAR(15) NOT NULL,
    ID INT,
    FOREIGN KEY(ID) REFERENCES PARENT(Parent_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE GRADES(
	Paper_ID INT,
    Student_ID INT,
    Grade FLOAT,
    FOREIGN KEY(Paper_ID) REFERENCES PAPER(Paper_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(Student_ID) REFERENCES STUDENT(Student_ID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE STR_GRADE(
	Paper_ID INT,
    Student_ID INT,
    Grade FLOAT,
    FOREIGN KEY(Paper_ID) REFERENCES PAPER(Paper_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(Student_ID) REFERENCES STUDENT(Student_ID) ON DELETE CASCADE ON UPDATE CASCADE
);














